//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CriticsClub.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="book", Namespace="http://schemas.datacontract.org/2004/07/CriticsClubServices")]
    [System.SerializableAttribute()]
    public partial class book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string authorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int book_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string genreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int pagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string publisherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string subgenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string titleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string author {
            get {
                return this.authorField;
            }
            set {
                if ((object.ReferenceEquals(this.authorField, value) != true)) {
                    this.authorField = value;
                    this.RaisePropertyChanged("author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int book_id {
            get {
                return this.book_idField;
            }
            set {
                if ((this.book_idField.Equals(value) != true)) {
                    this.book_idField = value;
                    this.RaisePropertyChanged("book_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string genre {
            get {
                return this.genreField;
            }
            set {
                if ((object.ReferenceEquals(this.genreField, value) != true)) {
                    this.genreField = value;
                    this.RaisePropertyChanged("genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int pages {
            get {
                return this.pagesField;
            }
            set {
                if ((this.pagesField.Equals(value) != true)) {
                    this.pagesField = value;
                    this.RaisePropertyChanged("pages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string publisher {
            get {
                return this.publisherField;
            }
            set {
                if ((object.ReferenceEquals(this.publisherField, value) != true)) {
                    this.publisherField = value;
                    this.RaisePropertyChanged("publisher");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string subgenre {
            get {
                return this.subgenreField;
            }
            set {
                if ((object.ReferenceEquals(this.subgenreField, value) != true)) {
                    this.subgenreField = value;
                    this.RaisePropertyChanged("subgenre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string title {
            get {
                return this.titleField;
            }
            set {
                if ((object.ReferenceEquals(this.titleField, value) != true)) {
                    this.titleField = value;
                    this.RaisePropertyChanged("title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="club", Namespace="http://schemas.datacontract.org/2004/07/CriticsClubServices")]
    [System.SerializableAttribute()]
    public partial class club : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int club_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string club_nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int club_id {
            get {
                return this.club_idField;
            }
            set {
                if ((this.club_idField.Equals(value) != true)) {
                    this.club_idField = value;
                    this.RaisePropertyChanged("club_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string club_name {
            get {
                return this.club_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.club_nameField, value) != true)) {
                    this.club_nameField = value;
                    this.RaisePropertyChanged("club_name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="user", Namespace="http://schemas.datacontract.org/2004/07/CriticsClubServices")]
    [System.SerializableAttribute()]
    public partial class user : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> club_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int user_idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> club_id {
            get {
                return this.club_idField;
            }
            set {
                if ((this.club_idField.Equals(value) != true)) {
                    this.club_idField = value;
                    this.RaisePropertyChanged("club_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string first {
            get {
                return this.firstField;
            }
            set {
                if ((object.ReferenceEquals(this.firstField, value) != true)) {
                    this.firstField = value;
                    this.RaisePropertyChanged("first");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string last {
            get {
                return this.lastField;
            }
            set {
                if ((object.ReferenceEquals(this.lastField, value) != true)) {
                    this.lastField = value;
                    this.RaisePropertyChanged("last");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int user_id {
            get {
                return this.user_idField;
            }
            set {
                if ((this.user_idField.Equals(value) != true)) {
                    this.user_idField = value;
                    this.RaisePropertyChanged("user_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllBooks", ReplyAction="http://tempuri.org/IService1/GetAllBooksResponse")]
        CriticsClub.ServiceReference1.book[] GetAllBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllBooks", ReplyAction="http://tempuri.org/IService1/GetAllBooksResponse")]
        System.Threading.Tasks.Task<CriticsClub.ServiceReference1.book[]> GetAllBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllClubs", ReplyAction="http://tempuri.org/IService1/GetAllClubsResponse")]
        CriticsClub.ServiceReference1.club[] GetAllClubs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllClubs", ReplyAction="http://tempuri.org/IService1/GetAllClubsResponse")]
        System.Threading.Tasks.Task<CriticsClub.ServiceReference1.club[]> GetAllClubsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUsers", ReplyAction="http://tempuri.org/IService1/GetAllUsersResponse")]
        CriticsClub.ServiceReference1.user[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUsers", ReplyAction="http://tempuri.org/IService1/GetAllUsersResponse")]
        System.Threading.Tasks.Task<CriticsClub.ServiceReference1.user[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUsersInClub", ReplyAction="http://tempuri.org/IService1/GetAllUsersInClubResponse")]
        CriticsClub.ServiceReference1.user[] GetAllUsersInClub(string club_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUsersInClub", ReplyAction="http://tempuri.org/IService1/GetAllUsersInClubResponse")]
        System.Threading.Tasks.Task<CriticsClub.ServiceReference1.user[]> GetAllUsersInClubAsync(string club_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllBooksPerClub", ReplyAction="http://tempuri.org/IService1/GetAllBooksPerClubResponse")]
        CriticsClub.ServiceReference1.book[] GetAllBooksPerClub(string club_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllBooksPerClub", ReplyAction="http://tempuri.org/IService1/GetAllBooksPerClubResponse")]
        System.Threading.Tasks.Task<CriticsClub.ServiceReference1.book[]> GetAllBooksPerClubAsync(string club_id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : CriticsClub.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<CriticsClub.ServiceReference1.IService1>, CriticsClub.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CriticsClub.ServiceReference1.book[] GetAllBooks() {
            return base.Channel.GetAllBooks();
        }
        
        public System.Threading.Tasks.Task<CriticsClub.ServiceReference1.book[]> GetAllBooksAsync() {
            return base.Channel.GetAllBooksAsync();
        }
        
        public CriticsClub.ServiceReference1.club[] GetAllClubs() {
            return base.Channel.GetAllClubs();
        }
        
        public System.Threading.Tasks.Task<CriticsClub.ServiceReference1.club[]> GetAllClubsAsync() {
            return base.Channel.GetAllClubsAsync();
        }
        
        public CriticsClub.ServiceReference1.user[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<CriticsClub.ServiceReference1.user[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public CriticsClub.ServiceReference1.user[] GetAllUsersInClub(string club_id) {
            return base.Channel.GetAllUsersInClub(club_id);
        }
        
        public System.Threading.Tasks.Task<CriticsClub.ServiceReference1.user[]> GetAllUsersInClubAsync(string club_id) {
            return base.Channel.GetAllUsersInClubAsync(club_id);
        }
        
        public CriticsClub.ServiceReference1.book[] GetAllBooksPerClub(string club_id) {
            return base.Channel.GetAllBooksPerClub(club_id);
        }
        
        public System.Threading.Tasks.Task<CriticsClub.ServiceReference1.book[]> GetAllBooksPerClubAsync(string club_id) {
            return base.Channel.GetAllBooksPerClubAsync(club_id);
        }
    }
}
